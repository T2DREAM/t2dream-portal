{"name":"babel-plugin-istanbul","version":"3.1.2","author":{"name":"Thai Pangsakulyanont @dtinth"},"license":"BSD-3-Clause","description":"A babel plugin that adds istanbul instrumentation to ES6 code","main":"lib/index.js","files":["lib"],"dependencies":{"find-up":"^1.1.2","istanbul-lib-instrument":"^1.4.2","object-assign":"^4.1.0","test-exclude":"^3.3.0"},"devDependencies":{"babel-cli":"^6.18.0","babel-core":"^6.21.0","babel-preset-es2015":"^6.18.0","chai":"^3.5.0","coveralls":"^2.11.15","cross-env":"^2.0.1","mocha":"^3.2.0","mock-fs":"^3.12.1","nyc":"^10.0.0","pmock":"^0.2.3","standard":"^8.6.0","standard-version":"^4.0.0"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","release":"babel src --out-dir lib","pretest":"standard && npm run release","test":"cross-env NODE_ENV=test nyc --reporter=lcov --reporter=text mocha --require=${FS_MOCK:-mock-fs} test/*.js","prepublish":"npm test && npm run release","version":"standard-version"},"standard":{"ignore":["fixtures/has-inline-source-map.js"]},"repository":{"type":"git","url":"git+https://github.com/istanbuljs/babel-plugin-istanbul.git"},"keywords":["istanbul","babel","plugin","instrumentation"],"nyc":{"include":["src/*.js","fixtures/should-cover.js"],"require":["babel-core/register"],"sourceMap":false,"instrument":false},"bugs":{"url":"https://github.com/istanbuljs/babel-plugin-istanbul/issues"},"homepage":"https://github.com/istanbuljs/babel-plugin-istanbul#readme","greenkeeper":{"ignore":["find-up","cross-env"]},"readme":"# babel-plugin-istanbul\n\n[![Build Status](https://travis-ci.org/istanbuljs/babel-plugin-istanbul.svg)](https://travis-ci.org/istanbuljs/babel-plugin-istanbul)\n[![Coverage Status](https://coveralls.io/repos/github/istanbuljs/babel-plugin-istanbul/badge.svg?branch=master)](https://coveralls.io/github/istanbuljs/babel-plugin-istanbul?branch=master)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\nA Babel plugin that instruments your code with Istanbul coverage.\nIt can instantly be used with [karma-coverage](https://github.com/karma-runner/karma-coverage) and mocha on Node.js (through [nyc](https://github.com/bcoe/nyc)).\n\n__Note:__ This plugin does not generate any report or save any data to any file;\nit only adds instrumenting code to your JavaScript source code.\nTo integrate with testing tools, please see the [Integrations](#integrations) section.\n\n## Usage\n\nInstall it:\n\n```\nnpm install --save-dev babel-plugin-istanbul\n```\n\nAdd it to `.babelrc` in test mode:\n\n```js\n{\n  \"env\": {\n    \"test\": {\n      \"plugins\": [ \"istanbul\" ]\n    }\n  }\n}\n```\n\nOptionally, use [cross-env](https://www.npmjs.com/package/cross-env) to set\n`NODE_ENV=test`:\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"cross-env NODE_ENV=test nyc --reporter=lcov --reporter=text mocha test/*.js\"\n  }\n}\n```\n\n## Integrations\n\n### karma\n\nIt _just works_ with Karma. First, make sure that the code is already transpiled by Babel (either using `karma-babel-preprocessor`, `karma-webpack`, or `karma-browserify`). Then, simply set up [karma-coverage](https://github.com/karma-runner/karma-coverage) according to the docs, but __donâ€™t add the `coverage` preprocessor.__ This plugin has already instrumented your code, and Karma should pick it up automatically.\n\nIt has been tested with [bemusic/bemuse](https://codecov.io/github/bemusic/bemuse) project, which contains ~2400 statements.\n\n### mocha on node.js (through nyc)\n\nConfigure Mocha to transpile JavaScript code using Babel, then you can run your tests with [`nyc`](https://github.com/bcoe/nyc), which will collect all the coverage report.\n\nbabel-plugin-istanbul respects the `include`/`exclude` configuration options from nyc,\nbut you also need to __configure NYC not to instrument your code__ by adding these settings in your `package.json`:\n\n```js\n  \"nyc\": {\n    \"sourceMap\": false,\n    \"instrument\": false\n  },\n```\n\n## Ignoring files\n\nYou don't want to cover your test files as this will skew your coverage results. You can configure this by providing plugin options matching nyc's [`exclude`/`include` rules](https://github.com/bcoe/nyc#excluding-files):\n\n```json\n{\n  \"env\": {\n    \"test\": {\n      \"plugins\": [\n        [\"istanbul\", {\n          \"exclude\": [\n            \"**/*.spec.js\"\n          ]\n        }]\n      ]\n    }\n  }\n}\n```\n\nIf you don't provide options in your Babel config, the plugin will look for `exclude`/`include` config under an `\"nyc\"` key in `package.json`.\n\nYou can also use [istanbul's ignore hints](https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes) to specify specific lines of code to skip instrumenting.\n\n## Source Maps\n\nBy default, this plugin will pick up inline source maps and attach them to the instrumented code such that code coverage can be remapped back to the original source, even for multi-step build processes. This can be memory intensive. Set `useInlineSourceMaps` to prevent this behavior.\n\n```json\n{\n  \"env\": {\n    \"test\": {\n      \"plugins\": [\n        [\"istanbul\", {\n          \"useInlineSourceMaps\": false\n        }]\n      ]\n    }\n  }\n}\n```\n\nIf you're instrumenting code programatically, you can pass a source map explicitly.\n```js\nimport babelPluginIstanbul from 'babel-plugin-istanbul';\n\nfunction instrument(sourceCode, sourceMap, fileName) {\n  return babel.transform(sourceCode, {\n    filename,\n    plugins: [\n      [babelPluginIstanbul, {\n        inputSourceMap: sourceMap\n      }]\n    ]\n  })\n}\n```\n\n## Credit where credit is due\n\nThe approach used in `babel-plugin-istanbul` was inspired by [Thai Pangsakulyanont](https://github.com/dtinth)'s original library [`babel-plugin-__coverage__`](https://github.com/dtinth/babel-plugin-__coverage__).\n","readmeFilename":"README.md","_id":"babel-plugin-istanbul@3.1.2","_shasum":"11d5abde18425ec24b5d648c7e0b5d25cd354a22","_resolved":"https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-3.1.2.tgz","_from":"https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-3.1.2.tgz"}