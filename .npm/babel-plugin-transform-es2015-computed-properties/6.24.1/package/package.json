{"name":"babel-plugin-transform-es2015-computed-properties","version":"6.24.1","description":"Compile ES2015 computed properties to ES5","repository":{"type":"git","url":"https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-es2015-computed-properties"},"license":"MIT","main":"lib/index.js","keywords":["babel-plugin"],"dependencies":{"babel-template":"^6.24.1","babel-runtime":"^6.22.0"},"devDependencies":{"babel-helper-plugin-test-runner":"^6.24.1"},"readme":"# babel-plugin-transform-es2015-computed-properties\n\n> Compile ES2015 computed properties to ES5\n\n## Example\n\n**In**\n\n```js\nvar obj = {\n  [\"x\" + foo]: \"heh\",\n  [\"y\" + bar]: \"noo\",\n  foo: \"foo\",\n  bar: \"bar\"\n};\n```\n\n**Out**\n\n```js\nvar _obj;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar obj = (\n  _obj = {},\n  _defineProperty(_obj, \"x\" + foo, \"heh\"),\n  _defineProperty(_obj, \"y\" + bar, \"noo\"),\n  _defineProperty(_obj, \"foo\", \"foo\"),\n  _defineProperty(_obj, \"bar\", \"bar\"),\n  _obj\n);\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-es2015-computed-properties\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"transform-es2015-computed-properties\"]\n}\n```\n\nWith options:\n\n```json\n{\n  \"plugins\": [\n    [\"transform-es2015-computed-properties\", {\n      \"loose\": true\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-es2015-computed-properties script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-es2015-computed-properties\"]\n});\n```\n\n## Options\n\n### `loose`\n\n`boolean`, defaults to `false`\n\nJust like method assignment in classes, in loose mode, computed property names\nuse simple assignments instead of being defined. This is unlikely to be an issue\nin production code.\n\n#### Example\n\n***In***\n\n```js\nvar obj = {\n  [\"x\" + foo]: \"heh\",\n  [\"y\" + bar]: \"noo\",\n  foo: \"foo\",\n  bar: \"bar\"\n};\n```\n\n***Out***\n\n```js\nvar _obj;\n\nvar obj = (\n  _obj = {},\n  _obj[\"x\" + foo] = \"heh\",\n  _obj[\"y\" + bar] = \"noo\",\n  _obj.foo = \"foo\",\n  _obj.bar = \"bar\",\n  _obj\n);\n```\n","readmeFilename":"README.md","_id":"babel-plugin-transform-es2015-computed-properties@6.24.1","_shasum":"6fe2a8d16895d5634f4cd999b6d3480a308159b3","_resolved":"https://registry.npmjs.org/babel-plugin-transform-es2015-computed-properties/-/babel-plugin-transform-es2015-computed-properties-6.24.1.tgz","_from":"https://registry.npmjs.org/babel-plugin-transform-es2015-computed-properties/-/babel-plugin-transform-es2015-computed-properties-6.24.1.tgz"}