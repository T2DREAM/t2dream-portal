{"name":"ci-info","version":"1.0.0","description":"Get details about the current Continuous Integration environment","main":"index.js","dependencies":{},"devDependencies":{"clear-require":"^1.0.1","standard":"^8.4.0"},"scripts":{"test":"standard && node test.js"},"repository":{"type":"git","url":"git+https://github.com/watson/ci-info.git"},"keywords":["ci","continuous","integration","test","detect"],"author":{"name":"Thomas Watson Steen","email":"w@tson.dk","url":"https://twitter.com/wa7son"},"license":"MIT","bugs":{"url":"https://github.com/watson/ci-info/issues"},"homepage":"https://github.com/watson/ci-info","coordinates":[55.68768499999999,12.5955698],"readme":"# ci-info\n\nGet details about the current Continuous Integration environment.\n\nPlease [open an issue](https://github.com/watson/ci-info/issues) if your\nCI server isn't properly detected :)\n\n[![Build status](https://travis-ci.org/watson/ci-info.svg?branch=master)](https://travis-ci.org/watson/ci-info)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n## Installation\n\n```\nnpm install ci-info --save\n```\n\n## Usage\n\n```js\nvar ci = require('ci-info')\n\nif (ci.isCI) {\n  console.log('The name of the CI server is:', ci.name)\n} else {\n  console.log('This program is not running on a CI server')\n}\n```\n\n## Supported CI tools\n\nOfficially supported CI servers:\n\n- [Travis CI](http://travis-ci.org)\n- [CircleCI](http://circleci.com)\n- [Jenkins CI](https://jenkins-ci.org)\n- [Hudson](http://hudson-ci.org)\n- [Bamboo](https://www.atlassian.com/software/bamboo) by Atlassian\n- [TeamCity](https://www.jetbrains.com/teamcity/) by JetBrains\n- [Team Foundation Server](https://www.visualstudio.com/en-us/products/tfs-overview-vs.aspx) by Microsoft\n- [GitLab CI](https://about.gitlab.com/gitlab-ci/)\n- [Codeship](https://codeship.com)\n- [Drone](https://drone.io)\n- [Magnum CI](https://magnum-ci.com)\n- [Semaphore](https://semaphoreci.com)\n- [AppVeyor](http://www.appveyor.com)\n- [Buildkite](https://buildkite.com)\n- [TaskCluster](http://docs.taskcluster.net)\n- [GoCD](https://www.go.cd/)\n- [Bitbucket Pipelines](https://bitbucket.org/product/features/pipelines)\n\n## API\n\n### `ci.name`\n\nA string. Will contain the name of the CI server the code is running on.\nIf not CI server is detected, it will be `null`.\n\nDon't depend on the value of this string not to change for a specific\nvendor. If you find your self writing `ci.name === 'Travis CI'`, you\nmost likely want to use `ci.TRAVIS` instead.\n\n### `ci.isCI`\n\nA boolean. Will be `true` if the code is running on a CI server.\nOtherwise `false`.\n\nSome CI servers not listed here might still trigger the `ci.isCI`\nboolean to be set to `true` if they use certain vendor neutral\nenvironment variables. In those cases `ci.name` will be `null` and no\nvendor specific boolean will be set to `true`.\n\n### `ci.<VENDOR-CONSTANT>`\n\nThe following vendor specific boolean constants are exposed. A constant\nwill be `true` if the code is determined to run on the given CI server.\nOtherwise `false`.\n\n- `ci.TRAVIS`\n- `ci.CIRCLE`\n- `ci.GITLAB`\n- `ci.APPVEYOR`\n- `ci.CODESHIP`\n- `ci.DRONE`\n- `ci.MAGNUM`\n- `ci.SEMAPHORE`\n- `ci.JENKINS`\n- `ci.BAMBOO`\n- `ci.TFS` (Team Foundation Server)\n- `ci.TEAMCITY`\n- `ci.BUILDKITE`\n- `ci.HUDSON`\n- `ci.TASKCLUSTER`\n- `ci.GOCD`\n- `ci.BITBUCKET`\n\n## License\n\nMIT\n","readmeFilename":"README.md","_id":"ci-info@1.0.0","_shasum":"dc5285f2b4e251821683681c381c3388f46ec534","_resolved":"https://registry.npmjs.org/ci-info/-/ci-info-1.0.0.tgz","_from":"https://registry.npmjs.org/ci-info/-/ci-info-1.0.0.tgz"}