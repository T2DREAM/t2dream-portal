{"name":"del","version":"2.2.2","description":"Delete files and folders","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/del.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["delete","del","remove","destroy","trash","unlink","clean","cleaning","cleanup","rm","rmrf","rimraf","rmdir","glob","gulpfriendly","file","files","folder","dir","directory","fs","filesystem"],"dependencies":{"globby":"^5.0.0","is-path-cwd":"^1.0.0","is-path-in-cwd":"^1.0.0","object-assign":"^4.0.1","pify":"^2.0.0","pinkie-promise":"^2.0.0","rimraf":"^2.2.8"},"devDependencies":{"ava":"*","fs-extra":"^0.30.0","path-exists":"^2.0.0","tempfile":"^1.1.1","xo":"*"},"readme":"# del [![Build Status](https://travis-ci.org/sindresorhus/del.svg?branch=master)](https://travis-ci.org/sindresorhus/del)\n\n> Delete files and folders using [globs](https://github.com/isaacs/minimatch#usage)\n\nPretty much [rimraf](https://github.com/isaacs/rimraf) with a Promise API and support for multiple files and globbing. It also protects you against deleting the current working directory and above.\n\n---\n\n<p align=\"center\"><b>ðŸ”¥ Want to strengthen your core JavaScript skills and master ES6?</b><br>I would personally recommend this awesome <a href=\"https://ES6.io/friend/AWESOME\">ES6 course</a> by Wes Bos.</p>\n\n---\n\n\n## Install\n\n```\n$ npm install --save del\n```\n\n\n## Usage\n\n```js\nconst del = require('del');\n\ndel(['tmp/*.js', '!tmp/unicorn.js']).then(paths => {\n\tconsole.log('Deleted files and folders:\\n', paths.join('\\n'));\n});\n```\n\n\n## Beware\n\nThe glob pattern `**` matches all children and *the parent*.\n\nSo this won't work:\n\n```js\ndel.sync(['public/assets/**', '!public/assets/goat.png']);\n```\n\nYou have to explicitly ignore the parent directories too:\n\n```js\ndel.sync(['public/assets/**', '!public/assets', '!public/assets/goat.png']);\n```\n\nSuggestions on how to improve this welcome!\n\n\n## API\n\n### del(patterns, [options])\n\nReturns a promise for an array of deleted paths.\n\n### del.sync(patterns, [options])\n\nReturns an array of deleted paths.\n\n#### patterns\n\nType: `string`, `array`\n\nSee supported minimatch [patterns](https://github.com/isaacs/minimatch#usage).\n\n- [Pattern examples with expected matches](https://github.com/sindresorhus/multimatch/blob/master/test.js)\n- [Quick globbing pattern overview](https://github.com/sindresorhus/multimatch#globbing-patterns)\n\n#### options\n\nType: `object`\n\nSee the `node-glob` [options](https://github.com/isaacs/node-glob#options).\n\n##### force\n\nType: `boolean`  \nDefault: `false`\n\nAllow deleting the current working directory and outside.\n\n##### dryRun\n\nType: `boolean`  \nDefault: `false`\n\nSee what would be deleted.\n\n```js\nconst del = require('del');\n\ndel(['tmp/*.js'], {dryRun: true}).then(paths => {\n\tconsole.log('Files and folders that would be deleted:\\n', paths.join('\\n'));\n});\n```\n\n\n## CLI\n\nSee [del-cli](https://github.com/sindresorhus/del-cli) for a CLI for this module and [trash-cli](https://github.com/sindresorhus/trash-cli) for a safe version that is suitable for running by hand.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/sindresorhus/del/issues"},"homepage":"https://github.com/sindresorhus/del#readme","_id":"del@2.2.2","_shasum":"c12c981d067846c84bcaf862cff930d907ffd1a8","_resolved":"https://registry.npmjs.org/del/-/del-2.2.2.tgz","_from":"https://registry.npmjs.org/del/-/del-2.2.2.tgz"}