{"name":"form-serialize","version":"0.6.0","description":"serialize html forms","main":"index.js","directories":{"test":"test"},"devDependencies":{"domify":"~1.0.0","zuul":"~1.15.1"},"scripts":{"test":"zuul -- test/index.js"},"repository":{"type":"git","url":"git://github.com/shtylman/form-serialize.git"},"keywords":["form","serialize"],"author":{"name":"Roman Shtylman","email":"shtylman@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/shtylman/form-serialize/issues"},"readme":"# form-serialize [![Build Status](https://travis-ci.org/defunctzombie/form-serialize.png?branch=master)](https://travis-ci.org/defunctzombie/form-serialize)\n\nserialize form fields to submit a form over ajax\n\n## install\n\n```shell\nnpm install form-serialize\n```\n\n## use\n\nform-serialize supports two output formats, url encoded (default) or hash (js objects).\n\nLets serialize the following html form:\n```html\n<form id=\"example-form\">\n\t<input type=\"text\" name=\"foo\" value=\"bar\"/>\n\t<input type=\"submit\" value=\"do it!\"/>\n</form>\n```\n\n```js\nvar serialize = require('form-serialize');\nvar form = document.querySelector('#example-form');\n\nvar str = serialize(form);\n// str -> \"foo=bar\"\n\nvar obj = serialize(form, { hash: true });\n// obj -> { foo: 'bar' }\n```\n\n## api\n\n### serialize(form [, options])\n\nReturns a serialized form of a HTMLForm element. Output is determined by the serializer used. Default serializer is url-encoded.\n\narg | type | desc\n:--- | :--- | :---\nform | HTMLForm | must be an HTMLForm element\noptions | Object | optional options object\n\n#### options\n\noption | type | default | desc\n:--- | :--- | :---: | :---\nhash | boolean | false | if `true`, the hash serializer will be used for `serializer` option\nserializer | function | url-encoding | override the default serializer (hash or url-encoding)\ndisabled | boolean | false | if `true`, disabled fields will also be serialized\nempty | boolean | false | if `true`, empty fields will also be serialized\n\n### custom serializer\n\nSerializers take 3 arguments: `result`, `key`, `value` and should return a newly updated result.\n\nSee the example serializers in the index.js source file.\n\n## notes\n\nonly [successfull control](http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2) form fields are serialized (with the exception of disabled fields if disabled option is set)\n\nmultiselect fields with more than one value will result in an array of values in the `hash` output mode using the default hash serializer\n\n### explicit array fields\n\nFields who's name ends with `[]` are **always** serialized as an array field in `hash` output mode using the default hash serializer.\nThe field name also gets the brackets removed from its name.\n\nThis does not affect `url-encoding` mode output in any way.\n\n```html\n<form id=\"example-form\">\n\t<input type=\"checkbox\" name=\"foo[]\" value=\"bar\" checked />\n\t<input type=\"checkbox\" name=\"foo[]\" value=\"baz\" />\n\t<input type=\"submit\" value=\"do it!\"/>\n</form>\n```\n\n```js\nvar serialize = require('form-serialize');\nvar form = document.querySelector('#example-form');\n\nvar obj = serialize(form, { hash: true });\n// obj -> { foo: ['bar'] }\n\nvar str = serialize(form);\n// str -> \"foo[]=bar\"\n\n```\n\n## references\n\nThis module is based on ideas from jQuery serialize and the Form.serialize method from the prototype library\n\n## license\n\nMIT\n","readmeFilename":"README.md","homepage":"https://github.com/shtylman/form-serialize#readme","_id":"form-serialize@0.6.0","_shasum":"0dfdaa71038bfc5832632771cff771ac724beca8","_resolved":"https://registry.npmjs.org/form-serialize/-/form-serialize-0.6.0.tgz","_from":"https://registry.npmjs.org/form-serialize/-/form-serialize-0.6.0.tgz"}