{"name":"idtoken-verifier","version":"1.1.0","description":"A lightweight library to decode and verify RS JWT meant for the browser.","main":"src/index.js","scripts":{"start":"gulp dev","build":"gulp build","test":"mocha test/**/*.test.js","test:watch":"mocha --watch  -R min test/*.test.js","test:coverage":"istanbul cover _mocha -R test/*.test.js","ci:test":"istanbul cover _mocha --report lcovonly -R test/**/* -- -R mocha-multi --reporter-options spec=-,mocha-junit-reporter=-","ci:coverage":"codecov","lint":"eslint ./src","jsdoc:generate":"jsdoc --configure .jsdoc.json --verbose","release:clean":"node scripts/cleanup.js","preversion":"node scripts/prepare.js","version":"node scripts/changelog.js && node scripts/jsdocs.js && node scripts/telemetry.js","postversion":"npm run release:clean","upload":"ccu build"},"author":{"name":"Auth0"},"license":"MIT","dependencies":{"base64-js":"^1.2.0","crypto-js":"^3.1.9-1","jsbn":"^0.1.0","superagent":"^3.3.1","url-join":"^1.1.0"},"keywords":["auth0","auth","authentication","jwt","verification","RS256","browser"],"repository":{"type":"git","url":"git+ssh://git@github.com/auth0/idtoken-verifier.git"},"devDependencies":{"@auth0/component-cdn-uploader":"^2.0.0","codecov":"^1.0.1","eslint":"3.7.1","eslint-config-auth0-base":"6.0.0","eslint-plugin-import":"1.16.0","expect.js":"^0.2.0","gulp":"^3.9.1","gulp-util":"^3.0.7","istanbul":"^0.4.5","jsdoc":"^3.4.3","jsdoc-to-markdown":"^2.0.1","minami":"^1.2.3","mocha":"^3.1.2","mocha-junit-reporter":"^1.13.0","mocha-multi":"^0.11.0","moment":"^2.18.1","sinon":"^1.17.6","smart-banner-webpack-plugin":"^2.0.0","unminified-webpack-plugin":"^1.1.1","webpack":"^1.13.2","webpack-core":"^0.6.8","webpack-custom-var-library-name-plugin":"^1.0.0","webpack-dev-server":"^1.16.2","webpack-hot-middleware":"^2.13.2","webpack-stream":"^3.2.0"},"ccu":{"name":"idtoken-verifier","cdn":"https://cdn.auth0.com","mainBundleFile":"idtoken-verifier.min.js","bucket":"assets.us.auth0.com"},"readme":"# idtoken-verifier\n\n[![Build Status][circleci-image]][circleci-url]\n[![NPM version][npm-image]][npm-url]\n[![Coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\nA lightweight library to decode and verify RS JWT meant for the browser.\n\n## Usage\n\n```js\nvar IdTokenVerifier = require('idtoken-verifier');\n\nvar verifier = new IdTokenVerifier({\n        issuer: 'https://my.auth0.com/',\n        audience: 'gYSNlU4YC4V1YPdqq8zPQcup6rJw1Mbt'\n    });\n\nverifier.verify(id_token, nonce, function(error, payload) {\n    ...\n});\n\nvar decoded = verifier.decode(id_token);\n```\n\n### IdTokenVerifier\n\nInitializes the verifier.\n\nParameters:\n- configuration\n    + issuer: the issuer you trust to sign the tokens.\n    + audience: the audience the token is issued for.\n    + leeway: when there is a clock skew times between the signing and verifying servers. The leeway should not be biger than a minute.\n    + jwksCache: the verifier will try to fetch the JWKS from the `/.well-known/jwks.json` endpoint each time it verifies a token. You can provide a cache to store the keys and avoid repeated requests. For the contract, check [this example](https://github.com/auth0/jwt-js-rsa-verification/blob/master/src/helpers/dummy-cache.js).\n- callback\n    + error: the validation error if any, null otherwise\n    + payload: the decoded jwt payload\n\n### verifier.verify\n\nThis method will decode the token, verify the issuer, audience, expiration, algorithm and nonce claims and after that will verify the token signature.\n\nParameters\n- id_token: the id_token to verify.\n- nonce: the nonce previously sent to tha authorization server.\n- callback\n\n### verifier.decode\n\nThis method will decode the token header and payload *WITHOUT* doing any verification.\n\nParameters\n- id_token: the id_token to decode.\n\nReturn\n- header: the decoded header.\n- payload: the decoded payload.\n- encoded: the parts without decode\n    + header: the header string.\n    + payload: the payload string.\n    + signature: the signature string.\n\n## Support\n\nTo make it as lightweight as posible, it only provides support for RS256 tokens. It can be easily extensible to other RS* algorithms.\n\n## Issue Reporting\n\nIf you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The [Responsible Disclosure Program](https://auth0.com/whitehat) details the procedure for disclosing security issues.\n\n## Author\n\n[Auth0](https://auth0.com)\n\n## License\n\nThis project is licensed under the MIT license. See the [LICENSE](LICENSE) file for more info.\n\n<!-- Vaaaaarrrrsss -->\n\n[npm-image]: https://img.shields.io/npm/v/idtoken-verifier.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/idtoken-verifier\n[circleci-image]: http://img.shields.io/circleci/project/github/auth0/idtoken-verifier.svg?branch=master&style=flat-square\n[circleci-url]: https://circleci.com/gh/auth0/idtoken-verifier\n[codecov-image]: https://img.shields.io/codecov/c/github/auth0/idtoken-verifier.svg?style=flat-square\n[codecov-url]: https://codecov.io/github/auth0/idtoken-verifier?branch=master\n[license-image]: http://img.shields.io/npm/l/idtoken-verifier.svg?style=flat-square\n[license-url]: #license\n[downloads-image]: http://img.shields.io/npm/dm/idtoken-verifier.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/idtoken-verifier","readmeFilename":"README.md","bugs":{"url":"https://github.com/auth0/idtoken-verifier/issues"},"homepage":"https://github.com/auth0/idtoken-verifier#readme","_id":"idtoken-verifier@1.1.0","_shasum":"1add30125aa3e5e5859d152b356a908a8e2eb5a0","_resolved":"https://registry.npmjs.org/idtoken-verifier/-/idtoken-verifier-1.1.0.tgz","_from":"https://registry.npmjs.org/idtoken-verifier/-/idtoken-verifier-1.1.0.tgz"}