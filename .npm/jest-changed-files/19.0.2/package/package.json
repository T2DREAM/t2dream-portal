{"name":"jest-changed-files","version":"19.0.2","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"license":"BSD-3-Clause","main":"build/index.js","readme":"# jest-changed-files\n\nA module used internally by Jest to check which files have changed since you\nlast committed in git or hg.\n\n## Install\n\n```sh\n$ npm install --save jest-changed-files\n```\n\n## API\n\n### `hg.isHGRepository(cwd: string): Promise<?string>`\n\nGet the root of the mercurial repository containing `cwd` or return `null` if\n`cwd` is not inside a mercurial repository.\n\n### `git.isGitRepository(cwd: string): Promise<?string>`\n\nGet the root of the git repository containing `cwd` or return `null` if\n`cwd` is not inside a git repository.\n\n### `hg.findChangedFiles / git.findChangedFiles (root: string): Promise<Array<string>>`\n\nGet the list of files in a git/mecurial repository that have changed since the\nlast commit.\n\n## Usage\n\n```javascript\nimport {git, hg} from 'jest-changed-files';\n\nfunction changedFiles(cwd) {\n  return Promise.all([\n    git.isGitRepository(cwd),\n    hg.isHGRepository(cwd),\n  ]).then(([gitRoot, hgRoot]) => {\n    if (gitRoot !== null) {\n      return git.findChangedFiles(gitRoot);\n    } else if (hgRoot !== null) {\n      return hg.findChangedFiles(hgRoot);\n    } else {\n      throw new Error('Not in a git or hg repo');\n    }\n  });\n}\n```\n","readmeFilename":"README.md","description":"A module used internally by Jest to check which files have changed since you last committed in git or hg.","bugs":{"url":"https://github.com/facebook/jest/issues"},"homepage":"https://github.com/facebook/jest#readme","_id":"jest-changed-files@19.0.2","_shasum":"16c54c84c3270be408e06d2e8af3f3e37a885824","_resolved":"https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-19.0.2.tgz","_from":"https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-19.0.2.tgz"}